import React, { useEffect, useState } from 'react';
import { useAdminAuth } from '../../context/AdminAuthContext';

interface Stats {
  usersTotal: number;
  usersActive: number;
  subscriptionsActive: number;
  skillsTotal: number;
  plansTotal: number;
  newsTotal: number;
}

export const DashboardPage: React.FC = () => {
  const { token } = useAdminAuth();
  const [stats, setStats] = useState<Stats | null>(null);
  const [loading, setLoading] = useState(false);
  const [err, setErr] = useState<string | null>(null);

  useEffect(() => {
    if (!token) return;
    let alive = true;
    (async () => {
      setLoading(true);
      setErr(null);
      try {
        const res = await fetch('/api/admin/stats', {
          headers: { Authorization: `Bearer ${token}` }
        });
        if (!res.ok) throw new Error('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É');
        const data = await res.json();
        if (alive) setStats(data);
      } catch (e:any) {
        if (alive) setErr(e.message);
      } finally {
        if (alive) setLoading(false);
      }
    })();
    return () => { alive = false; };
  }, [token]);

  if (loading) return <div>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</div>;
  if (err) return <div className="text-red-600">{err}</div>;

  return (
    <div className="space-y-8">
      <h2 className="text-2xl font-semibold">–ü–∞–Ω–µ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h2>
      <div className="grid md:grid-cols-3 gap-6">
        <StatCard title="–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ" value={stats?.usersTotal} sub="–í—Å—å–æ–≥–æ" icon="üë•" />
        <StatCard title="–ê–∫—Ç–∏–≤–Ω—ñ –∫–æ—Ä–∏—Å—Ç." value={stats?.usersActive} sub="–ê–∫—Ç–∏–≤–Ω—ñ" icon="‚úÖ" />
        <StatCard title="–ü—ñ–¥–ø–∏—Å–∫–∏" value={stats?.subscriptionsActive} sub="–ê–∫—Ç–∏–≤–Ω—ñ" icon="üì¶" />
        <StatCard title="–ù–∞–≤–∏—á–∫–∏" value={stats?.skillsTotal} sub="–£ –±–∞–∑—ñ" icon="üéØ" />
        <StatCard title="–ü–ª–∞–Ω–∏" value={stats?.plansTotal} sub="–û–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω—ñ" icon="üìã" />
        <StatCard title="–ù–æ–≤–∏–Ω–∏" value={stats?.newsTotal} sub="–ú–∞—Ç–µ—Ä—ñ–∞–ª–∏" icon="üì∞" />
      </div>
      <div className="grid md:grid-cols-2 gap-6">
        <Placeholder title="–î–∏–Ω–∞–º—ñ–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤" />
        <Placeholder title="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—ñ–¥–ø–∏—Å–æ–∫" />
      </div>
    </div>
  );
};

const StatCard: React.FC<{ title:string; value:any; sub:string; icon:string }> = ({ title,value,sub,icon }) => (
  <div className="bg-white p-6 rounded shadow flex items-center">
    <div className="text-3xl mr-4">{icon}</div>
    <div>
      <div className="text-xl font-semibold">{value ?? '‚Äî'}</div>
      <div className="text-sm text-gray-500">{title}</div>
      <div className="text-xs text-gray-400">{sub}</div>
    </div>
  </div>
);

const Placeholder: React.FC<{ title:string }> = ({ title }) => (
  <div className="bg-white p-6 rounded shadow min-h-[260px] flex items-center justify-center text-gray-400">
    {title} (–≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ)
  </div>
);