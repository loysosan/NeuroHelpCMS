version: '3.8'

services:
  test-runner:
    build:
      context: ..
      dockerfile: tests/Dockerfile
    container_name: cms-tests
    volumes:
      - ../:/app:ro  # Read-only mount проекту
      - test-cache:/app/tests/cache  # Кеш для тестів
      - test-coverage:/app/tests/coverage  # Для звітів покриття
    environment:
      - GO_ENV=test
      - CGO_ENABLED=1  # Потрібно для SQLite
      - GOOS=linux
      - GOARCH=amd64
    working_dir: /app/tests/admin_tests
    command: make test
    networks:
      - test-network

  # Контейнер для запуску тестів з покриттям
  test-coverage:
    build:
      context: ..
      dockerfile: tests/Dockerfile
    container_name: cms-test-coverage
    volumes:
      - ../:/app:ro
      - test-coverage:/app/tests/coverage
    environment:
      - GO_ENV=test
      - CGO_ENABLED=1
    working_dir: /app/tests/admin_tests
    command: make test-coverage
    networks:
      - test-network
    profiles:
      - coverage

  # Контейнер для запуску бенчмарків
  test-bench:
    build:
      context: ..
      dockerfile: tests/Dockerfile
    container_name: cms-test-bench
    volumes:
      - ../:/app:ro
      - test-cache:/app/tests/cache
    environment:
      - GO_ENV=test
      - CGO_ENABLED=1
    working_dir: /app/tests/admin_tests
    command: make test-bench
    networks:
      - test-network
    profiles:
      - bench

  # Контейнер для запуску з race detection
  test-race:
    build:
      context: ..
      dockerfile: tests/Dockerfile
    container_name: cms-test-race
    volumes:
      - ../:/app:ro
    environment:
      - GO_ENV=test
      - CGO_ENABLED=1
    working_dir: /app/tests/admin_tests
    command: make test-race
    networks:
      - test-network
    profiles:
      - race

  # Контейнер для запуску новинних тестів
  test-news:
    build:
      context: ..
      dockerfile: tests/Dockerfile
    container_name: cms-test-news
    volumes:
      - ../:/app:ro
      - test-coverage:/app/tests/coverage
    environment:
      - GO_ENV=test
      - CGO_ENABLED=1
    working_dir: /app/tests/admin_tests
    command: go test . -run TestAdminNews -v
    networks:
      - test-network
    profiles:
      - news

volumes:
  test-cache:
    driver: local
  test-coverage:
    driver: local

networks:
  test-network:
    driver: bridge