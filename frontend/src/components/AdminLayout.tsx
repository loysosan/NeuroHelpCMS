import React, { useEffect, useState } from 'react';
import { Link, useLocation, useNavigate } from 'react-router-dom';
import { useAuth } from '../context/AuthContext';

interface AdminLayoutProps {
  children: React.ReactNode;
}

const AdminLayout: React.FC<AdminLayoutProps> = ({ children }) => {
  const { logout, token, isLoading } = useAuth();
  const location = useLocation();
  const navigate = useNavigate();
  const [hasCheckedInitialAuth, setHasCheckedInitialAuth] = useState(false);

  // –õ–æ–≥–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π —Ä–µ–Ω–¥–µ—Ä
  console.log('AdminLayout render:', { 
    isLoading, 
    token: token ? `${token.substring(0, 20)}...` : 'null', 
    pathname: location.pathname,
    hasCheckedInitialAuth
  });

  useEffect(() => {
    console.log('AdminLayout effect triggered:', { 
      isLoading, 
      token: token ? `${token.substring(0, 20)}...` : 'null', 
      pathname: location.pathname,
      hasCheckedInitialAuth
    });
    
    // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –Ω–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
    if (!isLoading && !hasCheckedInitialAuth) {
      console.log('Initial auth check completed');
      setHasCheckedInitialAuth(true);
    }
    
    // –†–µ–¥–∏—Ä–µ–∫—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∏ —Ç–æ–∫–µ–Ω–∞ –Ω–µ—Ç
    if (hasCheckedInitialAuth && !isLoading && !token && location.pathname !== '/admin/login') {
      console.log('Redirecting to login...');
      navigate('/admin/login', { replace: true });
    }
  }, [token, navigate, isLoading, location.pathname, hasCheckedInitialAuth]);

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –µ—Å–ª–∏ –∏–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –ò–õ–ò –µ—Å–ª–∏ –Ω–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –µ—â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
  if (isLoading || !hasCheckedInitialAuth) {
    console.log('Showing loading screen...');
    return (
      <div className="flex items-center justify-center min-h-screen">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto"></div>
          <p className="mt-4 text-gray-600">–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó...</p>
        </div>
      </div>
    );
  }

  // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω–∞ –Ω–µ—Ç –∏ –º—ã –Ω–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ª–æ–≥–∏–Ω–∞, –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç
  if (!token && location.pathname !== '/admin/login') {
    console.log('No token, returning null');
    return null;
  }

  // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –µ—Å—Ç—å, —Ä–µ–Ω–¥–µ—Ä–∏–º –∞–¥–º–∏–Ω—Å–∫—É—é –ø–∞–Ω–µ–ª—å
  if (token) {
    console.log('Rendering admin panel with token');
  }

  const isActive = (path: string) => {
    return location.pathname === path ? 'bg-indigo-700' : '';
  };

  return (
    <div className="flex min-h-screen">
      {/* –ë–æ–∫–æ–≤–µ –º–µ–Ω—é */}
      <div className="w-64 bg-indigo-800 text-white flex flex-col">
        <div className="p-4">
          <h1 className="text-xl font-bold">–ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å</h1>
          <p className="text-sm text-indigo-300 mt-1">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</p>
        </div>
        
        <nav className="flex-1 mt-4">
          <Link
            to="/admin/dashboard"
            className={`flex items-center px-4 py-2 hover:bg-indigo-700 ${isActive('/admin/dashboard')}`}
          >
            <span className="mr-2">üìä</span>
            –ì–æ–ª–æ–≤–Ω–∞
          </Link>

          <Link
            to="/admin/users"
            className={`flex items-center px-4 py-2 hover:bg-indigo-700 ${isActive('/admin/users')}`}
          >
            <span className="mr-2">üë•</span>
            –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ
          </Link>

          <Link
            to="/admin/skills"
            className={`flex items-center px-4 py-2 hover:bg-indigo-700 ${isActive('/admin/skills')}`}
          >
            <span className="mr-2">üéØ</span>
            –ù–∞–≤–∏—á–∫–∏
          </Link>

          <Link
            to="/admin/news"
            className={`flex items-center px-4 py-2 hover:bg-indigo-700 ${isActive('/admin/news')}`}
          >
            <span className="mr-2">üì∞</span>
            –ù–æ–≤–∏–Ω–∏
          </Link>

          <Link
            to="/admin/plans"
            className={`flex items-center px-4 py-2 hover:bg-indigo-700 ${isActive('/admin/plans')}`}
          >
            <span className="mr-2">üìã</span>
            –ü–ª–∞–Ω–∏ –ø—ñ–¥–ø–∏—Å–∫–∏
          </Link>

          <Link
            to="/admin/administrators"
            className={`flex items-center px-4 py-2 hover:bg-indigo-700 ${isActive('/admin/administrators')}`}
          >
            <span className="mr-2">üë®‚Äçüíº</span>
            –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏
          </Link>
        </nav>

        <div className="p-4 border-t border-indigo-700">
          <button
            onClick={logout}
            className="flex items-center px-4 py-2 w-full text-left hover:bg-indigo-700 text-red-300 hover:text-red-200 rounded"
          >
            <span className="mr-2">üö™</span>
            –í–∏–π—Ç–∏
          </button>
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="flex-1 bg-gray-100">
        <div className="p-8">
          {children}
        </div>
      </div>
    </div>
  );
};

export default AdminLayout;